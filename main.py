# -*- coding: utf-8 -*-
"""main.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QQdVdz2eIuJ3_hkt3dkPttnR7FDmxkBq
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from preprocessing import load_and_preprocess_dataset
from decision_tree import train_decision_tree, evaluate_decision_tree
from random_forest import train_random_forest, evaluate_random_forest
from cnn import train_cnn, evaluate_cnn

# 1. Memuat dan memproses dataset
X_scaled, y = load_and_preprocess_dataset('KDDTrain+.txt', 'KDDTest+.txt')

# 2. Membagi dataset menjadi data pelatihan dan pengujian
X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, stratify=y, random_state=42)

# 3. Melatih model Decision Tree
dt_model = train_decision_tree(X_train, y_train)
dt_accuracy = evaluate_decision_tree(dt_model, X_test, y_test)

# 4. Melatih model Random Forest
rf_model = train_random_forest(X_train, y_train)
rf_accuracy = evaluate_random_forest(rf_model, X_test, y_test)

# 5. Mengubah data untuk CNN
X_scaled_cnn = X_scaled.reshape(X_scaled.shape[0], X_scaled.shape[1], 1)
X_train_cnn, X_test_cnn, y_train_cnn, y_test_cnn = train_test_split(X_scaled_cnn, y, test_size=0.2, stratify=y, random_state=42)

# 6. Melatih model CNN
cnn_model = train_cnn(X_train_cnn, y_train_cnn, X_train_cnn.shape)
cnn_accuracy = evaluate_cnn(cnn_model, X_test_cnn, y_test_cnn)

# 7. Menampilkan hasil
print(f"ðŸ“Š Akurasi Decision Tree: {dt_accuracy:.4f}")
print(f"ðŸ“Š Akurasi Random Forest: {rf_accuracy:.4f}")
print(f"ðŸ“Š Akurasi CNN: {cnn_accuracy:.4f}")